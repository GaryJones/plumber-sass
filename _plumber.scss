// *** PLUMBER - Real baseline grids with SASS ***

// Override this variable to set the leading origin to the baseline
$plumber-leading-from-baseline: false !default;

@mixin plumber(
	$font-size,
	$line-height,
	$leading: null,
	$grid-height: $plumber-grid-height,
	$baseline: $plumber-baseline
) {
	// *** VALIDATE PARAMETERS ***
	@if $font-size <= 0 {
		@error '$font-size parameter must be a positive number, got #{$font-size} instead';
	}	
	@if not unitless($line-height) or $line-height != round($line-height) or $line-height <= 0 {
		@error '$line-height parameter must be a positive integer, got #{$line-height} instead';
	}
	@if unitless($grid-height) or $grid-height < 0 {
		@error '$grid-height parameter must be a positive unit, got #{$grid-height} instead';
	}
	@if not (unitless($baseline) and $baseline >= 0 and $baseline < 1) {
		@error '$baseline parameter must be a number between 0 and 1, got #{$baseline} instead';
	}

	// *** CALCULATE BASELINE CORRECTION ***
	// the distance of the original baseline from the bottom
	$baseline-from-bottom: ($line-height - $font-size) / 2 + ($font-size * $baseline);
	// the corrected baseline will be on the nearest gridline
	$corrected-baseline: round($baseline-from-bottom);
	// the difference between the original and the corrected baseline
	$baseline-difference: $baseline-from-bottom - $corrected-baseline;

	// *** CALCULATE LEADING ***
	// apply zero bottom leading if missing or validate if specified
	@if not $leading {
		$leading: 0;
	} @else if not unitless($leading) or $leading != round($leading) {
		@error '$leading parameter must be an integer, got #{$leading} instead';
	}
	// if baseline origin is used for leadings substract the distance of the baseline from the edges
	@if $plumber-leading-from-baseline {
		$leading: $leading - $corrected-baseline;
	}

	// *** CALCULATE MARGINS & PADDINGS
	$margin-top: 0;
	$padding-top: 0;
	$padding-bottom: 0;
	$margin-bottom: null;

	@if $baseline-difference > 0 {
		// we need to push down the baseline to the next gridline
		// so we apply some padding
		$padding-top: $baseline-difference;
		// and add the remaining distance to the leading to reach a gridline
		$margin-bottom: $leading - $baseline-difference;
	} @else {
		// we need to pull up the baseline to the previous gridline
		// so we apply some negative margin
		$margin-top: $baseline-difference;
		// and substract the same distance from the leading to reach a gridline
		$margin-bottom: $leading - $baseline-difference;
	}
	
	// *** CSS OUTPUT ***
	font-size: $font-size * $grid-height;
	line-height: $line-height * $grid-height;
	margin-top: $margin-top * $grid-height;
	padding-top: $padding-top * $grid-height;
	padding-bottom: $padding-bottom * $grid-height;
	margin-bottom: $margin-bottom * $grid-height;
}